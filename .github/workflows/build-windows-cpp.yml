name: Build Windows C++ (WinAPI)

on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-static:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install build tools (Ninja)
        run: |
          choco install ninja -y

      - name: Determine version
        shell: pwsh
        run: |
          $ref = "${{ github.ref }}"
          if ($ref -like 'refs/tags/*') { 
            $version = $ref -replace 'refs/tags/v?','' 
          } else { 
            # Versão automática baseada em run_number começando com 6
            $version = "6.0.${{ github.run_number }}" 
          }
          "APP_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure KeyMapper (CMake)
        run: |
          cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DAPP_VERSION="%APP_VERSION%"

      - name: Build KeyMapper
        run: |
          cmake --build build --config Release --parallel

      - name: Verify single EXE (no Qt DLLs)
        shell: pwsh
        run: |
          $exe = Resolve-Path "build/bin/keymapper_app.exe"
          if (!(Test-Path $exe)) { Write-Error "EXE não encontrado"; exit 1 }
          Write-Host "Binário gerado:" $exe

      - name: Upload artifact (.exe monolítico)
        uses: actions/upload-artifact@v4
        with:
          name: KeyMapper_Static_EXE
          path: build/bin/keymapper_app.exe
